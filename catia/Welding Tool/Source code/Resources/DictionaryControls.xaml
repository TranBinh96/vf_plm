<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <sys:Double x:Key="GlbControlHeight">28</sys:Double>
    <CornerRadius x:Key="GlbControlCornerRadius">3</CornerRadius>
    <Thickness x:Key="GlbControlPadding">3</Thickness>
    
    <!--Color for Views in main UI-->
    <SolidColorBrush x:Key="BackgrUIDark" Color="#4e697e"/>
    <SolidColorBrush x:Key="BackgrUIMedium" Color="#779ebb"/>
    <SolidColorBrush x:Key="BackgrUILight1" Color="#bbd4e7"/>
    <SolidColorBrush x:Key="BackgrUILight2" Color="#edf6fd"/>

    <SolidColorBrush x:Key="Backgr1st" Color="White" Opacity="0.9"/>
    <SolidColorBrush x:Key="Backgr2nd" Color="#F9F9F9" Opacity="0.6"/>
    <SolidColorBrush x:Key="Backgr3rd" Color="#F9F9F9" Opacity="0.3"/>
    <SolidColorBrush x:Key="Border1st" Color="Black" Opacity="0.0578"/>

    <SolidColorBrush x:Key="BackgrSubtleStrong" Color="Black" Opacity="0.06"/>
    <SolidColorBrush x:Key="BackgrSubtle" Color="Black" Opacity="0.03"/>

    <LinearGradientBrush x:Key="BorderGradi" StartPoint="0, 0" EndPoint="0, 1" MappingMode="RelativeToBoundingBox">
        <GradientStop Color="#18000000" Offset="0.9"/>
        <GradientStop Color="#32000000" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="BorderGradiTbx" StartPoint="0, 0" EndPoint="0, 1" MappingMode="RelativeToBoundingBox">
        <GradientStop Color="#0E000000" Offset="0.94"/>
        <GradientStop Color="#72000000" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="BorderGradiAccent" StartPoint="0, 0" EndPoint="0, 1" MappingMode="RelativeToBoundingBox">
        <!--Color code already has Opacity value-->
        <GradientStop Color="#0E000000" Offset="0.88"/>
        <GradientStop Color="#ff0080ff" Offset="1"/>
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ForegrHover" Color="Black" Opacity="0.8956"/>
    <SolidColorBrush x:Key="ForegrPress" Color="Black" Opacity="0.6063"/>
    <SolidColorBrush x:Key="ForegrDisab" Color="Black" Opacity="0.3614"/>

    <Style x:Key="StyleBorderFocus">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Margin="-3" BorderThickness="1" BorderBrush="Black"
                            Opacity="0.8956" CornerRadius="5" SnapsToDevicePixels="True">
                        <Border BorderThickness="1" BorderBrush="White" CornerRadius="4"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StyleBorderFocus2">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Margin="0" BorderThickness="1" BorderBrush="Black"
                            Opacity="0.8956" CornerRadius="4" SnapsToDevicePixels="True">
                        <!--<Border BorderThickness="1" BorderBrush="White" CornerRadius="2"/>-->
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Accent bar-->
    <DataTemplate x:Key="AccentBar">
        <Border Width="3" Height="14" Background="#005FB8"
                HorizontalAlignment="Left" Margin="-10, 0"
                CornerRadius="1.5" SnapsToDevicePixels="True"/>
    </DataTemplate>


    <!--Button Global Style-->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Height" Value="{StaticResource GlbControlHeight}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource StyleBorderFocus}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="{StaticResource GlbControlCornerRadius}"
                            Padding="{StaticResource GlbControlPadding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="False"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="{StaticResource Backgr1st}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderGradi}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <!--<Setter Property="Background" Value="{StaticResource Backgr2nd}"/>-->
                <Setter Property="Foreground" Value="{StaticResource ForegrHover}"/>
                <Setter Property="Opacity" Value="0.8"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource Backgr3rd}"/>
                <Setter Property="Foreground" Value="{StaticResource ForegrPress}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Border1st}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource Backgr3rd}"/>
                <Setter Property="Foreground" Value="{StaticResource ForegrDisab}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Border1st}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--Label global style-->
    <Style TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="Black"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource ForegrDisab}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="StyleAnnotateLbl" TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="Foreground" Value="Gray"/>
    </Style>

    <!--Check box Global style-->
    <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource StyleBorderFocus}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border" Width="16" Height="16" BorderThickness="1"
                                    SnapsToDevicePixels="True"
                                    CornerRadius="{StaticResource GlbControlCornerRadius}"
                                    Background="#a02482db" BorderBrush="#a02482db">
                                <Grid>
                                    <Grid.Resources>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="HorizontalAlignment" Value="Center"/>
                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                            <Setter Property="FontWeight" Value="Regular"/>
                                        </Style>
                                    </Grid.Resources>
                                    <TextBlock Visibility="Collapsed" x:Name="CheckMark"
                                               SnapsToDevicePixels="False" Foreground="White"
                                               FontFamily="Segoe Fluent Icons" Text="&#xf78c;">
                                    </TextBlock>
                                    <TextBlock Visibility="Collapsed" x:Name="InderminateMark"
                                               SnapsToDevicePixels="False" Foreground="White"
                                               FontFamily="Segoe Fluent Icons" Text="&#xf78c;">
                                    </TextBlock>
                                </Grid>
                            </Border>
                        </BulletDecorator.Bullet>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#2482db" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="CheckMark">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.05" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0.2" Value="White" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#88000000"/>
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="InderminateMark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter Margin="8,0,0,0" RecognizesAccessKey="True"
                                          VerticalAlignment="Center" HorizontalAlignment="Left"/>
                    </BulletDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Textbox Global Style-->
    <Style TargetType="{x:Type TextBox}"
            BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Height" Value="{StaticResource GlbControlHeight}"/>
        <!--<Setter Property="VerticalContentAlignment" Value="Center"/>-->
        <!--<Setter Property="FocusVisualStyle" Value="{StaticResource StyleBorderFocus}"/>-->
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Name="Border" CornerRadius="{StaticResource GlbControlCornerRadius}"
                            Padding="{StaticResource GlbControlPadding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer x:Name="PART_ContentHost" Margin="0, 2, 0, 0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource Backgr1st}"/>
        <Setter Property="Foreground" Value="{StaticResource ForegrHover}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderGradiTbx}"/>
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Backgr2nd}"/>
                <Setter Property="Foreground" Value="{StaticResource ForegrHover}"/>
            </Trigger>
            <Trigger Property="IsSelectionActive" Value="True">
                <Setter Property="Background" Value="White"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="BorderBrush" Value="{StaticResource BorderGradiAccent}"/>
                <Setter Property="BorderThickness" Value="1, 1, 1, 2"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource Backgr3rd}"/>
                <Setter Property="Foreground" Value="{StaticResource ForegrDisab}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Border1st}"/>
            </Trigger>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip" 
                        Value="{Binding (Validation.Errors)/ErrorContent, RelativeSource={RelativeSource Self}}" />
                <Setter Property="Background" Value="LightPink"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Combobox Global Style-->
    <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="28" />
                        </Grid.ColumnDefinitions>
                        <Border
                          x:Name="Border"
                          Grid.ColumnSpan="2"
                          CornerRadius="3"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{StaticResource BorderGradi}"
                          BorderThickness="1" />
                        <TextBlock Foreground="{TemplateBinding Foreground}" Grid.Column="1"
                                   Opacity="0.6"
                                   HorizontalAlignment="Center" VerticalAlignment="Center"
                                   FontFamily="Segoe Fluent Icons" Text="&#xe972;"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border x:Name="PART_ContentHost" Focusable="True" />
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderGradi}" />
        <Setter Property="Background" Value="{StaticResource Backgr1st}" />
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="Height" Value="{StaticResource GlbControlHeight}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource StyleBorderFocus}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton
                            Name="ToggleButton"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            Foreground="{TemplateBinding Foreground}"
                            Style="{StaticResource ComboBoxToggleButton}"
                            Grid.Column="2"
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press"/>

                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="10,3,25,3" VerticalAlignment="Center" HorizontalAlignment="Center" />
                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}"
                            Template="{StaticResource ComboBoxTextBox}"
                            HorizontalAlignment="Center" VerticalAlignment="Center"
                            Margin="3,3,20,3" Focusable="True"
                            Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Grid Name="DropDown" Margin="0, 0, 20, 20" 
                                  SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border CornerRadius="4" x:Name="DropDownBorder"
                                        Background="White" BorderThickness="1"
                                        BorderBrush="{DynamicResource BorderGradi}">
                                    <Border.Effect>
                                        <DropShadowEffect Opacity="0.2" ShadowDepth="5"
                                                          Direction="310" BlurRadius="8"/>
                                    </Border.Effect>
                                </Border>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <!--<Setter Property="Background" Value="{StaticResource Backgr2nd}"/>-->
                <Setter Property="Opacity" Value="0.8"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource StyleBorderFocus2}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border Name="Border"
                            Padding="10, 0, 0, 0"
                            SnapsToDevicePixels="True"
                            Background="Transparent"
                            Height="27" CornerRadius="2">
                        <Grid>
                            <ContentControl ContentTemplate="{StaticResource AccentBar}"
                                            x:Name="BorAccent" Visibility="Collapsed" Focusable="False"/>
                            <TextBlock TextAlignment="Left" VerticalAlignment="Center" Padding="2, 0, 0, 0">
                                <ContentPresenter />
                            </TextBlock>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgrSubtle}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="BorAccent" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgrSubtleStrong}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListViewItem">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource StyleBorderFocus2}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="Border"
                            Padding="10, 0, 0, 0"
                            SnapsToDevicePixels="true"
                            Background="Transparent"
                            Height="{StaticResource GlbControlHeight}"
                            CornerRadius="{StaticResource GlbControlCornerRadius}">
                        <Grid>
                            <ContentControl ContentTemplate="{StaticResource AccentBar}"
                                            x:Name="BorAccent" Visibility="Collapsed" Focusable="False"/>
                            <TextBlock TextAlignment="Left" VerticalAlignment="Center"
                                       Text="{Binding}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgrSubtle}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="BorAccent" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgrSubtleStrong}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ListView">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Grid x:Name="Border">
                        <ScrollViewer Margin="3">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <!--<Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="{DynamicResource DisabledBorderLightColor}" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>