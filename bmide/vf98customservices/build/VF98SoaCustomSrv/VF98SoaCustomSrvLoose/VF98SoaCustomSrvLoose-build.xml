<!--
==================================================
 Copyright 2013.
 Siemens Product Lifecycle Management Software Inc.
 All Rights Reserved.
 ==================================================
 ==================================================
             Auto-generated source
                 DO NOT EDIT
 ==================================================
 -->


<project name="VF98SoaCustomSrvLoose" default="all"  basedir="../../.." >
  	<description> 
     	Service Loose Library Build. 
  	</description>
<!--
    These Properties need to be set by the caller
    
    <property name="soa.client.home"                   location="C:/Apps/Siemens/Teamcenter/soa_client" />
    <property name="toolbox.home"                      location="C:/Apps/Siemens/Teamcenter/soa_client/toolbox" />
    <property name="gen.src.home" 					   location="../output/genSrc />
    <property name="classes.home" 					   location="../output/wnti32/classes />
    <property name="jars.home"                         location="../output/wnti32/jars />

--> 
    <import file="../../targets.xml"/>

	<target name="init" >
	<!-- Set up directory locations -->
        <property name="project.directory"       location="${basedir}" />
        <property name="library.source.home"     location="${gen.src.home}/VF98SoaCustomSrvClient/loose/java" />
        <property name="library.classes.home"    location="${classes.home}" />
        <property name="jar.folder.home"         location="${jars.home}" />   	    
        <property name="teamcenter.version"         value="11000.2.0" />	   
        <property name="teamcenter.version.label"   value="V11000.2.0.40_20170509.00" />	   
        <property name="library.jar.name"           value="VF98SoaCustomSrvLoose_${teamcenter.version}.jar" />
        <property name="service.library.name"       value="VF98SoaCustomSrv" />
        <property name="service.library.sub.name"   value="Loose" />
        <property name="required.bundes"		    value="TcSoaCommon,TcSoaClient,VF98SoaCustomSrvTypes" />
  	    

        <fileset dir="${soa.client.home}/java/libs" id="soa.libs">
            <include name="TcSoaCommon_11000.2.0.jar"     />
            <include name="TcSoaClient_11000.2.0.jar"     />
        </fileset>
 
         <fileset dir="${jars.home}" id="project.libs">
            <include name="VF98SoaCustomSrvTypes_11000.2.0.jar" />
        </fileset> 
        
        <path id="build.classpath">
            <fileset refid="soa.libs"     />
            <fileset refid="project.libs" />
        </path>   	    
		
    </target>



   	
    <target name="clean" depends="init" unless="compile.not.required">
     	<!-- Delete all of the compiled code root folders.  On a 'all' build target this is       -->
     	<!-- only done if the compiled code is out-of-date. Since an updated service definition   -->
     	<!-- may have deleted operations or data structures there could be dangling artifacts     -->
        <delete   dir="${library.classes.home}" />
        <delete  file="${jars.home}/${library.jar.name}" />
    </target> 
   	
    <target name="setup" depends="init,clean" unless="compile.not.required">
        <mkdir  dir="${library.classes.home}" />
        <mkdir  dir="${jars.home}" />
    </target>	
	
    <target name="all" depends="init,setup,compile,debugJar,releaseJar" />
	
</project>
