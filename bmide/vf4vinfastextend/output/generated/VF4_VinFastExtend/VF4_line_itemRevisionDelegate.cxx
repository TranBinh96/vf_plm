//@<COPYRIGHT>@
//==================================================
//Copyright $2023.
//Siemens Product Lifecycle Management Software Inc.
//All Rights Reserved.
//==================================================
//@<COPYRIGHT>@

/*==================================================================================================
File description:
    This file contains the implementation for the Business Object, VF4_line_itemRevisionDelegate
    Filename:   VF4_line_itemRevisionDelegate.cxx
    Module:     VF4_VinFastExtend
    @BMIDE autogenerated
==================================================================================================*/


#ifdef  WNT
#define RAPIDJSON_NO_INT64DEFINE
#include <stdint.h>
#endif

#include <VF4_VinFastExtend/VF4_line_itemRevisionDelegate.hxx>
#include <VF4_VinFastExtend/VF4_line_itemRevisionGenImpl.hxx>
#include <tccore/ItemRevisionDelegate.hxx>
#include <VF4_VinFastExtend/VF4_line_itemRevisionImpl.hxx>
#include <mld/journal/journal.h>
#include <base_utils/ResultCheck.hxx>
#include <base_utils/IFail.hxx>
#include <tccore/tctype_errors.h>
#include <common/basic_definitions.h>



using  namespace  ::vf4vinfastextend;


::vf4vinfastextend::VF4_line_itemRevisionDelegate*  ::vf4vinfastextend::VF4_line_itemRevisionDelegate::m_pInstance = 0;


//----------------------------------------------------------------------------------
// ::vf4vinfastextend::VF4_line_itemRevisionDelegate::getInstance()
// Get the singleton class instance
//----------------------------------------------------------------------------------
::vf4vinfastextend::VF4_line_itemRevisionDelegate&  ::vf4vinfastextend::VF4_line_itemRevisionDelegate::getInstance()
{
    if( 0 == m_pInstance )
    {
        throw  IFail( TYPE_not_initialized );
    }

    return  *m_pInstance;
}


//----------------------------------------------------------------------------------
// ::vf4vinfastextend::VF4_line_itemRevisionDelegate::setInstance()
// Set the singleton class instance
//----------------------------------------------------------------------------------
void ::vf4vinfastextend::VF4_line_itemRevisionDelegate::setInstance( ::vf4vinfastextend::VF4_line_itemRevisionDelegate*  instance )
{
    m_pInstance = instance;
}

//----------------------------------------------------------------------------------
// ::vf4vinfastextend::VF4_line_itemRevisionDelegate::createImpl()
// create the Implementation pointer
//----------------------------------------------------------------------------------
::vf4vinfastextend::VF4_line_itemRevisionImpl*  ::vf4vinfastextend::VF4_line_itemRevisionDelegate::createImpl( VF4_line_itemRevision&  ifObj )
{
    ::vf4vinfastextend::VF4_line_itemRevisionImpl*  impl = 0;
    impl = new  ::vf4vinfastextend::VF4_line_itemRevisionImpl( ifObj );
    return  impl;
}


//----------------------------------------------------------------------------------
// ::vf4vinfastextend::VF4_line_itemRevisionDelegate::deleteImpl()
// Delete the Implementation pointer
//----------------------------------------------------------------------------------
void ::vf4vinfastextend::VF4_line_itemRevisionDelegate::deleteImpl( ::vf4vinfastextend::VF4_line_itemRevisionImpl*  impl )
{
    delete  impl;
}


//----------------------------------------------------------------------------------
// ::vf4vinfastextend::VF4_line_itemRevisionDelegate::VF4_line_itemRevisionDelegate()
// Constructor for the class
//----------------------------------------------------------------------------------
::vf4vinfastextend::VF4_line_itemRevisionDelegate::VF4_line_itemRevisionDelegate()
{
}


//----------------------------------------------------------------------------------
// ::vf4vinfastextend::VF4_line_itemRevisionDelegate::~VF4_line_itemRevisionDelegate()
// Destructor for the class
//----------------------------------------------------------------------------------
::vf4vinfastextend::VF4_line_itemRevisionDelegate::~VF4_line_itemRevisionDelegate()
{
}


//----------------------------------------------------------------------------------
// ::vf4vinfastextend::VF4_line_itemRevisionDelegate::initializeClass()
// Initialize the Class
//----------------------------------------------------------------------------------
int ::vf4vinfastextend::VF4_line_itemRevisionDelegate::initializeClass()
{
    
    if( JOURNAL_is_journaling() )
    {
        JOURNAL_routine_start( "::vf4vinfastextend::VF4_line_itemRevisionDelegate::initializeClass" );
        JOURNAL_routine_call();
    }
    int ifail = 0;

    try
    {
        ResultCheck  rStat = ::vf4vinfastextend::VF4_line_itemRevisionImpl::initializeClass();
    }
    catch( const IFail& ex )
    {
        ifail = ex.ifail();
    }

    
    if( JOURNAL_is_journaling() )
    {
        JOURNAL_return_value( ifail );
        JOURNAL_routine_end();
    }
    return  ifail;
}


///
/// Getter for a Double Property
/// @version ActiveWorkspace4.0
/// @param value - Parameter Value
/// @param isNull - Returns true if the Parameter value is null
/// @return - Status. 0 if successful
///
int  ::vf4vinfastextend::VF4_line_itemRevisionDelegate::getVf4_piece_cost_autoBase(const VF4_line_itemRevision &ifObj,  double &value, bool &isNull ) const
{
    return  ( ifObj.getVF4_line_itemRevisionImpl() )->getVf4_piece_cost_autoBase(  value, isNull  );
}

///
/// Getter for Property Display Value
/// @version ActiveWorkspace4.0
/// @param values - Parameter value
/// @return - Status. 0 if successful
///
int  ::vf4vinfastextend::VF4_line_itemRevisionDelegate::getVf4_piece_cost_autoDisplayableValuesBase(VF4_line_itemRevision &ifObj,  std::vector< std::string > &values )
{
    return  ( ifObj.getVF4_line_itemRevisionImpl() )->getVf4_piece_cost_autoDisplayableValuesBase(  values  );
}
