//@<COPYRIGHT>@
//==================================================
//Copyright $2023.
//Siemens Product Lifecycle Management Software Inc.
//All Rights Reserved.
//==================================================
//@<COPYRIGHT>@

/*==================================================================================================
File description:
    This file contains the implementation for the Business Object, VF4_line_itemRevision
    Filename:   VF4_line_itemRevision.cxx
    Module:     VF4_VinFastExtend
    @BMIDE autogenerated
==================================================================================================*/


#ifdef  WNT
#define RAPIDJSON_NO_INT64DEFINE
#include <stdint.h>
#endif
#include <metaframework/BusinessObjectRef.hxx>
#include <VF4_VinFastExtend/VF4_line_itemRevision.hxx>
#include <VF4_VinFastExtend/VF4_line_itemRevisionImpl.hxx>
#include <VF4_VinFastExtend/VF4_line_itemRevisionDelegate.hxx>
#include <VF4_VinFastExtend/VF4_line_itemRevisionGenImpl.hxx>
#include <mld/journal/journal.h>


using  namespace  ::vf4vinfastextend;


std::string  VF4_line_itemRevision::name = "VF4_line_itemRevision";


//----------------------------------------------------------------------------------
//  ::vf4vinfastextend::VF4_line_itemRevision::VF4_line_itemRevision()
//  Constructor for the class
//----------------------------------------------------------------------------------
::vf4vinfastextend::VF4_line_itemRevision::VF4_line_itemRevision() : ::Teamcenter::ItemRevision(), m_vf4_line_itemrevisionImpl( 0 ), m_deleteImpl( false )
{
}

//----------------------------------------------------------------------------------
//  ::vf4vinfastextend::VF4_line_itemRevision::~VF4_line_itemRevision()
//  Destructor for the class
//----------------------------------------------------------------------------------
::vf4vinfastextend::VF4_line_itemRevision::~VF4_line_itemRevision()
{
    if( m_deleteImpl )
    {
        VF4_line_itemRevisionDelegate::deleteImpl( m_vf4_line_itemrevisionImpl );
    }
    m_vf4_line_itemrevisionImpl = 0;
}

//----------------------------------------------------------------------------------
//  ::vf4vinfastextend::VF4_line_itemRevision::initialize()
//  Instantiate initialization
//----------------------------------------------------------------------------------
void ::vf4vinfastextend::VF4_line_itemRevision::initialize( ::Teamcenter::RootObjectImpl*  impl )
{
    
    if( JOURNAL_is_journaling() )
    {
        JOURNAL_routine_start( "::vf4vinfastextend::VF4_line_itemRevision::initialize" );
        JOURNAL_routine_call();
    }
    //  set impl pointer and call initialize super
    this->::Teamcenter::ItemRevision::initialize( setVF4_line_itemRevisionImpl( impl ) );
    
    if( JOURNAL_is_journaling() )
    {
        JOURNAL_return_value( 0 );
        JOURNAL_routine_end();
    }
}


//----------------------------------------------------------------------------------
//  ::vf4vinfastextend::VF4_line_itemRevision::getInterfaceName()
//  Get the Interface Name
//----------------------------------------------------------------------------------
const std::string&  ::vf4vinfastextend::VF4_line_itemRevision::getInterfaceName()
{
    return  name;
}

//----------------------------------------------------------------------------------
//  ::vf4vinfastextend::VF4_line_itemRevision::setVF4_line_itemRevisionImpl()
//  Set the Business Object Impl
//----------------------------------------------------------------------------------
::Teamcenter::RootObjectImpl*
::vf4vinfastextend::VF4_line_itemRevision::setVF4_line_itemRevisionImpl( ::Teamcenter::RootObjectImpl*  impl )
{
    if( impl != 0 )
    {
        m_vf4_line_itemrevisionImpl = dynamic_cast< VF4_line_itemRevisionImpl* >( impl );
    }
    if( !m_vf4_line_itemrevisionImpl )
    {
        m_vf4_line_itemrevisionImpl = VF4_line_itemRevisionDelegate::createImpl( *this );
        if( m_vf4_line_itemrevisionImpl )
        {
            m_deleteImpl = true;
        }
    }
    return  m_vf4_line_itemrevisionImpl;
}

//----------------------------------------------------------------------------------
//  ::vf4vinfastextend::VF4_line_itemRevision::getVF4_line_itemRevisionImpl()
//  Get the Business Object Impl
//----------------------------------------------------------------------------------
::vf4vinfastextend::VF4_line_itemRevisionImpl*
::vf4vinfastextend::VF4_line_itemRevision::getVF4_line_itemRevisionImpl() const
{
    return  m_vf4_line_itemrevisionImpl;
}


///
/// Getter for a Double Property
/// @version ActiveWorkspace4.0
/// @param value - Parameter Value
/// @param isNull - Returns true if the Parameter value is null
/// @return - Status. 0 if successful
///
int  ::vf4vinfastextend::VF4_line_itemRevision::getVf4_piece_cost_auto( double &value, bool &isNull ) const
{
    int ifail = 0;
    vf4vinfastextend::VF4_line_itemRevisionGenImpl *  pGenImplPtr = getVF4_line_itemRevisionImpl();
    if( pGenImplPtr != 0 )
    {
        ifail = pGenImplPtr->getVf4_piece_cost_auto(  value, isNull  );
    }

    return  ifail;
}

///
/// Getter for Property Display Value
/// @version ActiveWorkspace4.0
/// @param values - Parameter value
/// @return - Status. 0 if successful
///
int  ::vf4vinfastextend::VF4_line_itemRevision::getVf4_piece_cost_autoDisplayableValues( std::vector< std::string > &values )
{
    int ifail = 0;
    vf4vinfastextend::VF4_line_itemRevisionGenImpl *  pGenImplPtr = getVF4_line_itemRevisionImpl();
    if( pGenImplPtr != 0 )
    {
        ifail = pGenImplPtr->getVf4_piece_cost_autoDisplayableValues(  values  );
    }

    return  ifail;
}
