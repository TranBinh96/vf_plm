## sql email Queues
sql.insertEmailQueue=INSERT INTO email_sender (email_to, subject, message, status) VALUES (:#To,:#Subject, :#Body, 'QUEUE')
sql.insertEmailQueueInValid=INSERT INTO email_sender (email_to, subject, message, status) VALUES (:#To,:#Subject, :#Body, 'INVALID_EMAIL')
sql.updateEmailSent=UPDATE email_sender set status ='SENT' where id=:#EmailID
sql.queryEmailQueue=SELECT id, email_to, subject, message from email_sender where status = 'QUEUE' and email_to != '' limit 1
sql.queryInvalidEmailQueue=SELECT id, email_to, subject from email_sender where status = 'INVALID_EMAIL'

## SQL Query Property Value
sql.queryPropertyValue=select property_value from vinfast_properties where property_name = :#PropertyName limit 1

## MM QUERY NOT SYNCHRONIZED
sql.queryMM=select id, part_number, part_name, revision, change_number, uom, net_weight, gross_weight, material_type, functional_class, approval_code, tracable_part, gm_part_number, broadcast_code, status from material_master where status != 'SYNCHRONIZED'

sql.queryPlantCodeWrtMMId=select s.id, s.plant_code, s.make_buy	FROM sap_plant_code s join sap_mm_plantcode_map m on s.id = m.plant_code_id join material_master d on d.id = m.sap_mm_id where d.id = :#ItemId

## SQP UNLINK SUPPLIERS
sql.sqpUnlinkSuppliers=SELECT part_number, supplier_code from sq_portal_unlink_suppliers where status != 'SYNCHRONIZED'
sql.sqpUnlinkSuppliersFailed=update sq_portal_unlink_suppliers set status = 'FAILED', sync_status = :#CbStatus where part_number = :#PartNumber and supplier_code = :#SupplierCode
sql.sqpUnlinkSupplierDelete=delete from sq_portal_unlink_suppliers where part_number = :#PartNumber and supplier_code = :#SupplierCode

## SAP PR-PO INTEGRATION
sql.insertSapPrPoWip=INSERT INTO purchasing_pr_po_update (part_number, po_number, po_type, actual_date, vehicle_type, inco_term, supplier_code, supplier_name, gross_price, gross_unit, fright_price, fright_unit, insurance, insurance_unit, import_tax, quota, loekz) VALUES (:#PartNumber, :#PONumber,:#POType, :#ActualDate,:#VehicleType,:#IncoTerm, :#SupplierCode, :#SupplierName, :#GrossPrice,:#GrossUnit,:#FreightPrice, :#FreightUnit, :#InsurancePrice, :#InsuranceUnit, :#ImportTax, :#Quota, :#LOEKZ)
#sql.insertSapPrPoWip=INSERT INTO purchasing_pr_po_update (part_number, po_number, po_type, actual_date, vehicle_type, inco_term, supplier_code, supplier_name, gross_price, gross_unit, fright_price, fright_unit, insurance, insurance_unit, import_tax, quota, loekz) VALUES (:#PartNumber, :#PONumber,:#POType, :#ActualDate,:#VehicleType,:#IncoTerm, :#SupplierCode, :#SupplierName, :#GrossPrice,:#GrossUnit,:#FreightPrice, :#FreightUnit, :#InsurancePrice, :#InsuranceUnit, :#ImportTax, :#Quota, 'OK')

## TC DATA PULLER WIP INSERT
sql.insertTcDataPuller=INSERT INTO tc_data_puller_wip (type, uid) VALUES (:#Type, :#Uid)

## TC DATA PULLER QUERY IF EXISTS
sql.qryExistanceTcDataPuller=SELECT uid from tc_data_puller_wip where type = :#Type and uid = :#Uid and (status = 'FAILED' OR status = 'QUEUED') limit 1
sql.insertTcSQPData=INSERT INTO tc_data_puller_wip (type, uid) VALUES (:#Type, :#PartNumber)
